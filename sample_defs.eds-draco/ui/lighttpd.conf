#######################################################################
##
## /etc/lighttpd/lighttpd.conf
##
## check /etc/lighttpd/conf.d/*.conf for the configuration of modules.
##
#######################################################################

server.document-root = system_root + "/pages"
server.modules += ( "mod_accesslog", "mod_alias", "mod_fastcgi" )

# For testing, all the logs/state/cache/config are simply put into the system_root
# If this were a real target then this might need to change (readonly filesystems, etc)
var.log_root    = system_root
var.state_dir   = system_root
var.cache_dir   = system_root 
var.conf_dir    = system_root

#######################################################################
##
##  Basic Configuration
## ---------------------
##
server.port = var.http_port

##
## Use IPv6?
##
server.use-ipv6 = "disable"

##
## bind to a specific IP
##
#server.bind = "localhost"

##
## Run as a different username/groupname.
## This requires root permissions during startup. 
##
server.username  = "www-data"
server.groupname = "www-data"

## 
## enable core files.
##
#server.core-files = "disable"

##
## The value for the "Server:" response field.
##
## It would be nice to keep it at "lighttpd".
##
#server.tag = "lighttpd"

##
## store a pid file
##
server.pid-file = state_dir + "/lighttpd.pid"

##
#######################################################################

#######################################################################
##
##  Logging Options
## ------------------
##
## all logging options can be overwritten per vhost.
##
## Path to the error log file
##
server.errorlog             = log_root + "/error.log"

##
## If you want to log to syslog you have to unset the 
## server.errorlog setting and uncomment the next line.
##
#server.errorlog-use-syslog = "enable"

##
## Access log config
## 
accesslog.filename          = log_root + "/access.log"

## 
## log-request-handling allows you to track the request
## handing inside lighttpd. 
##
#debug.log-request-handling        = "enable"

## 
## log all request headers. 
##
#debug.log-request-header          = "enable"

## 
## similar to log-request-header.
## but only logs if we encountered an error.
## (return codes 400 and 5xx)
##
debug.log-request-header-on-error = "enable"

## 
## log the header we send out to the client.
##
#debug.log-response-header         = "enable"

## 
## log if a file wasnt found in the error log.
##
debug.log-file-not-found          = "enable"

## 
## debug conditionals handling
##
#debug.log-condition-handling      = "enable"

##
#######################################################################

#######################################################################
##
##  Tuning/Performance
## --------------------
##
## corresponding documentation:
## http://www.lighttpd.net/documentation/performance.html
##
## set the event-handler (read the performance section in the manual)
##
## possible options on linux are:
##
## select
## poll
## linux-sysepoll
##
## linux-sysepoll is recommended on kernel 2.6.
##
#server.event-handler = "linux-sysepoll"

##
## The basic network interface for all platforms at the syscalls read()
## and write(). Every modern OS provides its own syscall to help network
## servers transfer files as fast as possible 
##
## linux-sendfile - is recommended for small files.
## writev         - is recommended for sending many large files
##
#server.network-backend = "linux-sendfile"

##
## As lighttpd is a single-threaded server, its main resource limit is
## the number of file descriptors, which is set to 1024 by default (on
## most systems).
##
## If you are running a high-traffic site you might want to increase this
## limit by setting server.max-fds.
##
## Changing this setting requires root permissions on startup. see
## server.username/server.groupname.
##
## By default lighttpd would not change the operation system default.
## But setting it to 2048 is a better default for busy servers.
##
#server.max-fds = 2048

##
## Stat() call caching.
##
## lighttpd can utilize FAM/Gamin to cache stat call.
##
## possible values are:
## disable, simple or fam.
##
server.stat-cache-engine = "simple"

##
## Fine tuning for the request handling
##
## max-connections == max-fds/2 (maybe /3)
## means the other file handles are used for fastcgi/files
##
server.max-connections = 64

##
## How many seconds to keep a keep-alive connection open,
## until we consider it idle. 
##
## Default: 5
##
#server.max-keep-alive-idle = 5

##
## How many keep-alive requests until closing the connection.
##
## Default: 16
##
#server.max-keep-alive-requests = 16

##
## Maximum size of a request in kilobytes.
## By default it is unlimited (0).
##
## Uploads to your server cant be larger than this value.
##
#server.max-request-size = 0

##
## Time to read from a socket before we consider it idle.
##
## Default: 60
##
#server.max-read-idle = 60

##
## Time to write to a socket before we consider it idle.
##
## Default: 360
##
#server.max-write-idle = 360

##
##  Traffic Shaping 
## -----------------
##
## see /usr/share/doc/lighttpd/traffic-shaping.txt
##
## Values are in kilobyte per second.
##
## Keep in mind that a limit below 32kB/s might actually limit the
## traffic to 32kB/s. This is caused by the size of the TCP send
## buffer. 
##
## per server:
##
#server.kbytes-per-second = 128

##
## per connection:
##
#connection.kbytes-per-second = 32

##
#######################################################################

#######################################################################
##
##  Filename/File handling
## ------------------------

##
## files to check for if .../ is requested
##
index-file.names = ( "index.html" )

# Hook all .fcgi placeholder files to FastCGI
fastcgi.server = ( 
  ".fcgi" => (( "host" => "127.0.0.1", "port" => 22850 ))
)
##
## deny access the file-extensions
##
## ~    is for backupfiles from vi, emacs, joe, ...
## .inc is often used for code includes which should in general not be part
##      of the document-root
url.access-deny             = ( "~", ".inc" )

##
## disable range requests for pdf files
## workaround for a bug in the Acrobat Reader plugin.
##
$HTTP["url"] =~ "\.pdf$" {
  server.range-requests = "disable"
}

##
## url handling modules (rewrite, redirect)
##
#url.rewrite                = ( "^/$"             => "/server-status" )
#url.redirect               = ( "^/wishlist/(.+)" => "http://www.example.com/$1" )

##
## both rewrite/redirect support back reference to regex conditional using %n
##
#$HTTP["host"] =~ "^www\.(.*)" {
#  url.redirect            = ( "^/(.*)" => "http://%1/$1" )
#}

##
## which extensions should not be handle via static-file transfer
##
## .php, .pl, .fcgi are most often handled by mod_fastcgi or mod_cgi
##
static-file.exclude-extensions = ( ".php", ".pl", ".fcgi", ".scgi" )

##
## error-handler for status 404
##
#server.error-handler-404   = "/error-handler.html"
#server.error-handler-404   = "/error-handler.php"

##
## Format: <errorfile-prefix><status-code>.html
## -> ..../status-404.html for 'File not found'
##
#server.errorfile-prefix    = "/srv/www/htdocs/errors/status-"

##
## mimetype mapping
## This is just a really basic set of MIME types 
## 
mimetype.assign = (
".pdf" => "application/pdf",
".key" => "application/pgp-keys",
".pgp" => "application/pgp-signature",
".ps" => "application/postscript",
".eps" => "application/postscript",
".js" => "application/javascript",
".rss" => "application/rss+xml",
".rtf" => "application/rtf",
".xhtml" => "application/xhtml+xml",
".xht" => "application/xhtml+xml",
".xml" => "application/xml",
".xsl" => "application/xml",
".xsd" => "application/xml",
".xspf" => "application/xspf+xml",
".zip" => "application/zip",
".cpio" => "application/x-cpio",
".tgz" => "application/x-gtar-compressed",
".tar" => "application/x-tar",
".gif" => "image/gif",
".jpeg" => "image/jpeg",
".jpg" => "image/jpeg",
".jpe" => "image/jpeg",
".pcx" => "image/pcx",
".png" => "image/png",
".svg" => "image/svg+xml",
".svgz" => "image/svg+xml",
".tiff" => "image/tiff",
".tif" => "image/tiff",
".ico" => "image/x-icon",
".bmp" => "image/x-ms-bmp",
".pnm" => "image/x-portable-anymap",
".pbm" => "image/x-portable-bitmap",
".pgm" => "image/x-portable-graymap",
".ppm" => "image/x-portable-pixmap",
".rgb" => "image/x-rgb",
".xbm" => "image/x-xbitmap",
".xpm" => "image/x-xpixmap",
".css" => "text/css",
".csv" => "text/csv",
".html" => "text/html",
".asc" => "text/plain",
".txt" => "text/plain",
".text" => "text/plain",
)

##
## Should lighttpd follow symlinks?
## 
server.follow-symlink = "enable"


##
## defaults to /var/tmp as we assume it is a local harddisk
##
server.upload-dirs = ( "/var/tmp" )

##
#######################################################################

